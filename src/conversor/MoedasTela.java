/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package conversor;

//import static conversor.ConversorMoedas.converterRealParaDolar;

import java.text.DecimalFormat;
import javax.swing.JOptionPane;



/**
 *
 * @author Andressa Marques
 */
public class MoedasTela extends javax.swing.JFrame {
    
    /**
     * Creates new form MoedasTela
     */
    public MoedasTela() {
        initComponents();
        lblResultado.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        input = new javax.swing.JComboBox<>();
        lblResultado = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtValor = new javax.swing.JTextArea();
        lblComplemento = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnConversor = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 0, 204));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        input.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        input.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "De Real a Dolar", "De Real a Euro", "De Real a Libras(GBP)", "De Real a Peso(ARS)", "De Real a Peso Chileno", "De Dolar a Real", "De Euro a Real", "De Libras(GBP) a Real", "De Peso(ARS) a Real", "De Peso Chileno a Real" }));
        input.setActionCommand("");
        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });

        lblResultado.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        lblResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblResultado.setText("0,00");

        lblTitulo.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(0, 0, 0));
        lblTitulo.setText("Conversor de Moedas");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtValor.setBackground(new java.awt.Color(153, 255, 153));
        txtValor.setColumns(20);
        txtValor.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        txtValor.setRows(5);
        txtValor.setAutoscrolls(false);
        txtValor.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(txtValor);

        lblComplemento.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lblComplemento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Insira o valor:");

        btnConversor.setBackground(new java.awt.Color(0, 204, 51));
        btnConversor.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnConversor.setForeground(new java.awt.Color(255, 255, 255));
        btnConversor.setText("Converter");
        btnConversor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConversorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblComplemento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(lblTitulo))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(btnConversor, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 49, Short.MAX_VALUE))
                    .addComponent(lblResultado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblTitulo)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnConversor, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(lblResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConversorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConversorActionPerformed
        
        ConversorMoedas cm = new ConversorMoedas();
        DecimalFormat df = new DecimalFormat("0.00");
        String entrada = input.getSelectedItem().toString();
        double valor = Double.parseDouble(txtValor.getText());
        
        switch(entrada){
            case  "De Real a Dolar" :
                
                cm.converterRealParaDolar(valor); //chamando o metodo
                lblResultado.setVisible(true); //deixando o lbl visivél
                String res1 = "O valor em Dolar é $" + df.format(cm.moeda); //criando uma "variável" pra chamar o valor da outra classe
                lblResultado.setText(res1); // mostrando o resultado
                lblComplemento.setText("**Dolar - USD cotado à R$5.28"); 
                
                break;
                    
            case "De Real a Euro":

                cm.converterRealParaEuro(valor); 
                lblResultado.setVisible(true); 
                String res2 = "O valor em Euro é € " + df.format(cm.moeda); 
                lblResultado.setText(res2); 
                lblComplemento.setText("**Euro - EUR cotado à R$5.63");
                
                break;
            
            case "De Real a Libras(GBP)":

                cm.converterRealParaLibraE(valor); 
                lblResultado.setVisible(true); 
                String res3 = "O valor em Libras(GBP)  é £ " + df.format(cm.moeda); 
                lblResultado.setText(res3); 
                lblComplemento.setText("**Libras Esterlinas - GBP cotada à R$6.43");
                
                break;
                    
            case "De Real a Peso(ARS)":
                cm.converterRealParaPesoA(valor); 
                lblResultado.setVisible(true); 
                String res4 = "O valor em Peso(ARS) é $ " + df.format(cm.moeda); 
                lblResultado.setText(res4); 
                lblComplemento.setText("**Peso Argentino - ARS cotada à R$0.026");
                    
                break;
                    
            case "De Real a Peso Chileno":
                    cm.converterRealParaPesoC(valor); 
                    lblResultado.setVisible(true); 
                    String res5 = "O valor em Peso(CLP) é $ " + df.format(cm.moeda); 
                    lblResultado.setText(res5); 
                    lblComplemento.setText("**Peso Chileno - CLP cotada à R$0.0064");                     

                
                break;
                
            case "De Dolar a Real":
                
                cm.dolarParaReal(valor); 
                lblResultado.setVisible(true);
                String cov = "R$ " + df.format(cm.moeda);
                lblResultado.setText(cov); 
                lblComplemento.setText("**Dolar - USD cotado à R$5.28"); 
                
                break;
            
            case "De Euro a Real":
                
                cm.euroParaReal(valor); 
                lblResultado.setVisible(true);
                String cov1 = "R$ " + df.format(cm.moeda);
                lblResultado.setText(cov1); 
                lblComplemento.setText("**Euro - EUR cotado à R$5.63");

                break;
            
            case "De Libras(GBP) a Real":
                
                cm.librasParaReal(valor); 
                lblResultado.setVisible(true);
                String cov2 = "R$ " + df.format(cm.moeda);
                lblResultado.setText(cov2); 
                lblComplemento.setText("**Libras Esterlinas - GBP cotada à R$6.43"); 
                
                break;
                
            case "De Peso(ARS) a Real":
                
                cm.pesoAParaReal(valor); 
                lblResultado.setVisible(true);
                String cov3 = "R$ " + df.format(cm.moeda);
                lblResultado.setText(cov3); 
                lblComplemento.setText("**PesoArgentino - ARS cotada à R$0.026");
                
                break; 
                
            case "De Peso Chileno a Real":

                cm.pesoCParaReal(valor); 
                lblResultado.setVisible(true);
                String cov4 = "R$ " + df.format(cm.moeda);
                lblResultado.setText(cov4); 
                lblComplemento.setText("**Peso Chileno - CLP cotada à R$0.0064"); 
                
                break;                

        }

    }//GEN-LAST:event_btnConversorActionPerformed

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoedasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoedasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoedasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoedasTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoedasTela().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConversor;
    private javax.swing.JComboBox<String> input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblResultado;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextArea txtValor;
    // End of variables declaration//GEN-END:variables
}
